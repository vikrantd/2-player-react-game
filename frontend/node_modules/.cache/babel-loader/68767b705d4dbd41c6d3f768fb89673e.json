{"ast":null,"code":"import _slicedToArray from \"/Users/vicky/workspace/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const _window = window,\n        width = _window.innerWidth,\n        height = _window.innerHeight;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const _useState = useState(getWindowDimensions()),\n        _useState2 = _slicedToArray(_useState, 2),\n        windowDimensions = _useState2[0],\n        setWindowDimensions = _useState2[1];\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n}","map":{"version":3,"sources":["/Users/vicky/workspace/my-app/src/sizeHelper.js"],"names":["useState","useEffect","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,SAASC,mBAAT,GAA+B;AAAA,kBACwBC,MADxB;AAAA,QACPC,KADO,WACnBC,UADmB;AAAA,QACaC,MADb,WACAC,WADA;AAE3B,SAAO;AACLH,IAAAA,KADK;AAELE,IAAAA;AAFK,GAAP;AAID;;AAEH,eAAe,SAASE,mBAAT,GAA+B;AAAA,oBACER,QAAQ,CAACE,mBAAmB,EAApB,CADV;AAAA;AAAA,QACvCO,gBADuC;AAAA,QACrBC,mBADqB;;AAG9CT,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASU,YAAT,GAAwB;AACxBD,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACC;;AAEDC,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACC","sourcesContent":["import { useState, useEffect } from 'react';\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n  \nexport default function useWindowDimensions() {\nconst [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\nuseEffect(() => {\n    function handleResize() {\n    setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n}, []);\n\nreturn windowDimensions;\n}"]},"metadata":{},"sourceType":"module"}